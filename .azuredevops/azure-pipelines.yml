# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main
  
resources:
  containers:
    - container: node
      image: ' node:14'

variables:
  # Docker Container registry variables
  imageRepository: '360review'
  containerRegistry: 'cr360reviewkdevsanorth001.azurecr.io'
  dockerRegistryServiceConnection: 'Container-Registry-360-Review'
  dockerFilePath: '$(Build.SourcesDirectory)/dockerfile'
  tag: '$(Build.BuildId)-$(Build.SourceVersion)'
  dockerImageName: '$(containerRegistry)/$(imageRepository):$(tag)'
  dockerBuildConfiguration: 'production'
  sonarQubeServiceConnectionName: 'SonarQube-360-Review'
  sonarQubeProjectKey: '360-review-web'
  sonarQubeProjectName: '360-Review'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      
      - task: Docker@2
        displayName: Build docker image
        inputs:
          command: build
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          arguments: --build-arg configuration=18.04
          tags: |
            latest
            $(tag)
          buildContext: $(Build.SourcesDirectory)

      - script: docker run --name angularapp --rm -d -it $(dockerImageName)
        displayName: Start docker container

      - script: docker exec angularapp ls      
        displayName: List files in working directory
        continueOnError: true
        
      - script: docker exec angularapp ls /analytics      
        displayName: List files in analytics directory
        continueOnError: true
        
      - script: exit    
        displayName: Exit terminal

      - script: |
          docker cp angularapp:analytics $(System.DefaultWorkingDirectory)/analytics
        displayName: Copy test reports

      - script: docker stop angularapp
        displayName: Stop docker container        

      - script: ls $(System.DefaultWorkingDirectory)
        displayName: Stop docker container
        continueOnError: true

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: $(System.DefaultWorkingDirectory)/analytics/cobertura-coverage.xml
          failIfCoverageEmpty: true
        displayName: Publish code coverage results

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'analytics/junit_report.xml'
          failTaskOnFailedTests: true
        displayName: Publish unit test results
      
      - task: SonarQubePrepare@5
        displayName: SonarQube prepare stage
        inputs:
          SonarQube: $(sonarQubeServiceConnectionName)
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: $(sonarQubeProjectKey)
          cliProjectName: $(sonarQubeProjectName)
          cliSources: '.'
        continueOnError: true

      - powershell: |
          $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w,/,-]*"\,?' 
          Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
        displayName: Remove parameter "sonar.branch.name" required for licensed SonarQube editions
        continueOnError: true

      - powershell: |
          $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.pullrequest.branch":"[\w,/,-]*"\,?' 
          Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
        displayName: Remove parameter "sonar.pullrequest.branch" required for licensed SonarQube editions
        continueOnError: true

      - powershell: |
          $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.pullrequest.key":"[\w,/,-]*"\,?' 
          Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
        displayName: Remove parameter "sonar.pullrequest.key" required for licensed SonarQube editions
        continueOnError: true
              
      - powershell: |
          $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.pullrequest.base":"[\w,/,-]*"\,?' 
          Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
        displayName: Remove parameter "sonar.pullrequest.base" required for licensed SonarQube editions
        continueOnError: true

      - task: SonarQubeAnalyze@5
        displayName: SonarQube analyze stage
        continueOnError: true

      - task: SonarQubePublish@5
        displayName: SonarQube publish stage
        inputs:
          pollingTimeoutSec: '300'
        continueOnError: true

      - script: docker images
        displayName: List docker images
        
      - task: Docker@2
        displayName: Push image to container registry
        inputs:
          command: push
          repository: $(imageRepository)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            latest
            $(tag)